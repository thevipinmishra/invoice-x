'use client';

import * as React from 'react';
import { useLazyRef } from "./useLazyRef.js";

// https://github.com/mui/material-ui/issues/41190#issuecomment-2040873379
const useInsertionEffect = React[`useInsertionEffect${Math.random().toFixed(1)}`.slice(0, -3)] || (fn => fn());
export function useEventCallback(callback) {
  const stable = useLazyRef(createStableCallback).current;
  stable.next = callback;
  useInsertionEffect(stable.effect);
  return stable.trampoline;
}
function createStableCallback() {
  const stable = {
    next: undefined,
    callback: assertNotCalled,
    trampoline: (...args) => stable.callback?.(...args),
    effect: () => {
      stable.callback = stable.next;
    }
  };
  return stable;
}
function assertNotCalled() {
  throw new Error('Cannot call an event handler while rendering.');
}