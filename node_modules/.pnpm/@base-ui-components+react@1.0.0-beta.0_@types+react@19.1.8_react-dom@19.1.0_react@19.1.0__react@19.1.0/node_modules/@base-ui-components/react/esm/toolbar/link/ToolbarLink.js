'use client';

import * as React from 'react';
import { useComponentRenderer } from "../../utils/useComponentRenderer.js";
import { useButton } from "../../use-button/index.js";
import { CompositeItem } from "../../composite/item/CompositeItem.js";
import { useToolbarRootContext } from "../root/ToolbarRootContext.js";
import { jsx as _jsx } from "react/jsx-runtime";
const TOOLBAR_LINK_METADATA = {
  focusableWhenDisabled: true
};
/**
 * A link component.
 * Renders an `<a>` element.
 *
 * Documentation: [Base UI Toolbar](https://base-ui.com/react/components/toolbar)
 */
export const ToolbarLink = /*#__PURE__*/React.forwardRef(function ToolbarLink(props, forwardedRef) {
  const {
    className,
    render,
    ...otherProps
  } = props;
  const {
    orientation
  } = useToolbarRootContext();
  const {
    getButtonProps
  } = useButton({
    buttonRef: forwardedRef,
    elementName: 'a'
  });
  const state = React.useMemo(() => ({
    orientation
  }), [orientation]);
  const {
    renderElement
  } = useComponentRenderer({
    propGetter: getButtonProps,
    render: render ?? 'a',
    state,
    className,
    extraProps: otherProps
  });
  return /*#__PURE__*/_jsx(CompositeItem, {
    metadata: TOOLBAR_LINK_METADATA,
    render: renderElement()
  });
});
if (process.env.NODE_ENV !== "production") ToolbarLink.displayName = "ToolbarLink";