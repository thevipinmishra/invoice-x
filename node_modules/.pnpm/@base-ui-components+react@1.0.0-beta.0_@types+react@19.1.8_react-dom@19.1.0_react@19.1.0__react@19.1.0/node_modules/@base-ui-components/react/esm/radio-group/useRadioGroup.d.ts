import * as React from 'react';
export declare function useRadioGroup(params: useRadioGroup.Parameters): {
  getRootProps: (externalProps?: {}) => import("../utils/types.js").WithBaseUIEvent<React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement>>;
  getInputProps: (externalProps?: {}) => import("../utils/types.js").WithBaseUIEvent<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>>;
  checkedValue: unknown;
  setCheckedValue: (newValue: unknown) => void;
  touched: boolean;
  setTouched: React.Dispatch<React.SetStateAction<boolean>>;
  fieldControlValidation: {
    getValidationProps: (externalProps?: {}) => import("../utils/types.js").WithBaseUIEvent<any>;
    getInputValidationProps: (externalProps?: {}) => import("../utils/types.js").WithBaseUIEvent<React.DetailedHTMLProps<React.InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>>;
    inputRef: React.RefObject<HTMLInputElement | null>;
    commitValidation: (value: unknown, revalidate?: any) => Promise<void>;
  };
  name: string | undefined;
};
export declare namespace useRadioGroup {
  interface Parameters {
    name?: string;
    disabled?: boolean;
    required?: boolean;
    readOnly?: boolean;
    defaultValue?: unknown;
    value?: unknown;
    inputRef?: React.Ref<HTMLInputElement>;
  }
}