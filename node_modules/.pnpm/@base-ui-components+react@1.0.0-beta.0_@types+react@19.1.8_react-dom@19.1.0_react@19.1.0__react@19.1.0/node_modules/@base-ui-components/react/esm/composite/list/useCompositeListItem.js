'use client';

import * as React from 'react';
import { useModernLayoutEffect } from "../../utils/useModernLayoutEffect.js";
import { useCompositeListContext } from "./CompositeListContext.js";
/**
 * Used to register a list item and its index (DOM position) in the `CompositeList`.
 */
export function useCompositeListItem(params = {}) {
  const {
    label,
    metadata,
    textRef
  } = params;
  const {
    register,
    unregister,
    map,
    elementsRef,
    labelsRef
  } = useCompositeListContext();
  const [index, setIndex] = React.useState(null);
  const componentRef = React.useRef(null);
  const ref = React.useCallback(node => {
    componentRef.current = node;
    if (index !== null && node !== null) {
      elementsRef.current[index] = node;
      if (labelsRef) {
        const isLabelDefined = label !== undefined;
        labelsRef.current[index] = isLabelDefined ? label : textRef?.current?.textContent ?? node.textContent;
      }
    }
  }, [index, elementsRef, labelsRef, label, textRef]);
  useModernLayoutEffect(() => {
    const node = componentRef.current;
    if (node) {
      register(node, metadata);
      return () => {
        unregister(node);
      };
    }
    return undefined;
  }, [register, unregister, metadata]);
  useModernLayoutEffect(() => {
    const i = componentRef.current ? map.get(componentRef.current)?.index : null;
    if (i != null) {
      setIndex(i);
    }
  }, [map]);
  return React.useMemo(() => ({
    ref,
    index: index == null ? -1 : index
  }), [index, ref]);
}