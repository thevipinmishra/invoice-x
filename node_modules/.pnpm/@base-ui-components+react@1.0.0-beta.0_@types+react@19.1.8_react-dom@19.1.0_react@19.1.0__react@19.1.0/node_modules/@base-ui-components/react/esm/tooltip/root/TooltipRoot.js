'use client';

import * as React from 'react';
import { TooltipRootContext } from "./TooltipRootContext.js";
import { useTooltipRoot } from "./useTooltipRoot.js";
import { OPEN_DELAY } from "../utils/constants.js";

/**
 * Groups all parts of the tooltip.
 * Doesnâ€™t render its own HTML element.
 *
 * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)
 */
import { jsx as _jsx } from "react/jsx-runtime";
export const TooltipRoot = function TooltipRoot(props) {
  const {
    disabled = false,
    defaultOpen = false,
    onOpenChange,
    open,
    delay,
    closeDelay,
    hoverable = true,
    trackCursorAxis = 'none',
    actionsRef,
    onOpenChangeComplete
  } = props;
  const delayWithDefault = delay ?? OPEN_DELAY;
  const closeDelayWithDefault = closeDelay ?? 0;
  const tooltipRoot = useTooltipRoot({
    ...props,
    defaultOpen,
    onOpenChange,
    open,
    hoverable,
    trackCursorAxis,
    delay,
    closeDelay,
    actionsRef,
    onOpenChangeComplete,
    disabled
  });
  const contextValue = React.useMemo(() => ({
    ...tooltipRoot,
    delay: delayWithDefault,
    closeDelay: closeDelayWithDefault,
    trackCursorAxis,
    hoverable
  }), [tooltipRoot, delayWithDefault, closeDelayWithDefault, trackCursorAxis, hoverable]);
  return /*#__PURE__*/_jsx(TooltipRootContext.Provider, {
    value: contextValue,
    children: props.children
  });
};
if (process.env.NODE_ENV !== "production") TooltipRoot.displayName = "TooltipRoot";