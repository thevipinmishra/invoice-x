"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.SelectItemText = void 0;
var React = _interopRequireWildcard(require("react"));
var _SelectRootContext = require("../root/SelectRootContext");
var _SelectItemContext = require("../item/SelectItemContext");
var _useRenderElement = require("../../utils/useRenderElement");
var _jsxRuntime = require("react/jsx-runtime");
const InnerSelectItemText = /*#__PURE__*/React.memo(/*#__PURE__*/React.forwardRef(function InnerSelectItemText(componentProps, forwardedRef) {
  const {
    className,
    render,
    selected,
    selectedItemTextRef,
    indexRef,
    textRef,
    ...elementProps
  } = componentProps;
  const localRef = React.useCallback(node => {
    // Wait for the DOM indices to be set.
    queueMicrotask(() => {
      const hasNoSelectedItemText = selectedItemTextRef.current === null || !selectedItemTextRef.current.isConnected;
      if (selected || hasNoSelectedItemText && indexRef.current === 0) {
        selectedItemTextRef.current = node;
      }
    });
  }, [selected, selectedItemTextRef, indexRef]);
  const element = (0, _useRenderElement.useRenderElement)('div', componentProps, {
    ref: [localRef, forwardedRef, textRef],
    props: elementProps
  });
  return element;
}));

/**
 * A text label of the select item.
 * Renders a `<div>` element.
 *
 * Documentation: [Base UI Select](https://base-ui.com/react/components/select)
 */
if (process.env.NODE_ENV !== "production") InnerSelectItemText.displayName = "InnerSelectItemText";
const SelectItemText = exports.SelectItemText = /*#__PURE__*/React.forwardRef(function SelectItemText(props, forwardedRef) {
  const {
    selected,
    indexRef
  } = (0, _SelectItemContext.useSelectItemContext)();
  const {
    selectedItemTextRef
  } = (0, _SelectRootContext.useSelectRootContext)();
  const {
    textRef
  } = (0, _SelectItemContext.useSelectItemContext)();
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(InnerSelectItemText, {
    ref: forwardedRef,
    selected: selected,
    selectedItemTextRef: selectedItemTextRef,
    indexRef: indexRef,
    textRef: textRef,
    ...props
  });
});
if (process.env.NODE_ENV !== "production") SelectItemText.displayName = "SelectItemText";