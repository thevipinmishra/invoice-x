"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useToolbarRoot = useToolbarRoot;
var React = _interopRequireWildcard(require("react"));
var _mergeProps = require("../../merge-props");
function useToolbarRoot(parameters) {
  const {
    orientation
  } = parameters;
  const [itemMap, setItemMap] = React.useState(() => new Map());
  const disabledIndices = React.useMemo(() => {
    const output = [];
    for (const itemMetadata of itemMap.values()) {
      if (itemMetadata?.index && !itemMetadata.focusableWhenDisabled) {
        output.push(itemMetadata.index);
      }
    }
    return output;
  }, [itemMap]);
  const getRootProps = React.useCallback((externalProps = {}) => {
    return (0, _mergeProps.mergeProps)({
      'aria-orientation': orientation,
      role: 'toolbar'
    }, externalProps);
  }, [orientation]);
  return React.useMemo(() => ({
    getRootProps,
    disabledIndices,
    setItemMap
  }), [getRootProps, disabledIndices, setItemMap]);
}