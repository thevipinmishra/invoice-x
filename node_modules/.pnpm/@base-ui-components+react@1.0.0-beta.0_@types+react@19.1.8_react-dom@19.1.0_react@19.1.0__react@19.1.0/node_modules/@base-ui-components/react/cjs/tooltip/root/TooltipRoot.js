"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.TooltipRoot = void 0;
var React = _interopRequireWildcard(require("react"));
var _TooltipRootContext = require("./TooltipRootContext");
var _useTooltipRoot = require("./useTooltipRoot");
var _constants = require("../utils/constants");
var _jsxRuntime = require("react/jsx-runtime");
/**
 * Groups all parts of the tooltip.
 * Doesnâ€™t render its own HTML element.
 *
 * Documentation: [Base UI Tooltip](https://base-ui.com/react/components/tooltip)
 */
const TooltipRoot = exports.TooltipRoot = function TooltipRoot(props) {
  const {
    disabled = false,
    defaultOpen = false,
    onOpenChange,
    open,
    delay,
    closeDelay,
    hoverable = true,
    trackCursorAxis = 'none',
    actionsRef,
    onOpenChangeComplete
  } = props;
  const delayWithDefault = delay ?? _constants.OPEN_DELAY;
  const closeDelayWithDefault = closeDelay ?? 0;
  const tooltipRoot = (0, _useTooltipRoot.useTooltipRoot)({
    ...props,
    defaultOpen,
    onOpenChange,
    open,
    hoverable,
    trackCursorAxis,
    delay,
    closeDelay,
    actionsRef,
    onOpenChangeComplete,
    disabled
  });
  const contextValue = React.useMemo(() => ({
    ...tooltipRoot,
    delay: delayWithDefault,
    closeDelay: closeDelayWithDefault,
    trackCursorAxis,
    hoverable
  }), [tooltipRoot, delayWithDefault, closeDelayWithDefault, trackCursorAxis, hoverable]);
  return /*#__PURE__*/(0, _jsxRuntime.jsx)(_TooltipRootContext.TooltipRootContext.Provider, {
    value: contextValue,
    children: props.children
  });
};
if (process.env.NODE_ENV !== "production") TooltipRoot.displayName = "TooltipRoot";