"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MeterValue = void 0;
var React = _interopRequireWildcard(require("react"));
var _mergeProps = require("../../merge-props");
var _useComponentRenderer = require("../../utils/useComponentRenderer");
var _MeterRootContext = require("../root/MeterRootContext");
const EMPTY = {};
/**
 * A text element displaying the current value.
 * Renders a `<span>` element.
 *
 * Documentation: [Base UI Meter](https://base-ui.com/react/components/meter)
 */
const MeterValue = exports.MeterValue = /*#__PURE__*/React.forwardRef(function MeterValue(props, forwardedRef) {
  const {
    className,
    render,
    children,
    ...otherProps
  } = props;
  const {
    value,
    formattedValue
  } = (0, _MeterRootContext.useMeterRootContext)();
  const getValueProps = React.useCallback((externalProps = {}) => (0, _mergeProps.mergeProps)({
    'aria-hidden': true,
    children: typeof children === 'function' ? children(formattedValue, value) : (formattedValue || value) ?? ''
  }, externalProps), [children, value, formattedValue]);
  const {
    renderElement
  } = (0, _useComponentRenderer.useComponentRenderer)({
    propGetter: getValueProps,
    render: render ?? 'span',
    className,
    state: EMPTY,
    ref: forwardedRef,
    extraProps: otherProps
  });
  return renderElement();
});
if (process.env.NODE_ENV !== "production") MeterValue.displayName = "MeterValue";