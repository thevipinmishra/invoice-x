"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ToastAction = void 0;
var React = _interopRequireWildcard(require("react"));
var _ToastRootContext = require("../root/ToastRootContext");
var _useButton = require("../../use-button/useButton");
var _useRenderElement = require("../../utils/useRenderElement");
/**
 * Performs an action when clicked.
 * Renders a `<button>` element.
 *
 * Documentation: [Base UI Toast](https://base-ui.com/react/components/toast)
 */
const ToastAction = exports.ToastAction = /*#__PURE__*/React.forwardRef(function ToastAction(componentProps, forwardedRef) {
  const {
    render,
    className,
    disabled,
    ...elementProps
  } = componentProps;
  const {
    toast
  } = (0, _ToastRootContext.useToastRootContext)();
  const computedChildren = toast.actionProps?.children ?? elementProps.children;
  const shouldRender = Boolean(computedChildren);
  const {
    getButtonProps
  } = (0, _useButton.useButton)({
    disabled,
    buttonRef: forwardedRef
  });
  const state = React.useMemo(() => ({
    type: toast.type
  }), [toast.type]);
  const element = (0, _useRenderElement.useRenderElement)('button', componentProps, {
    ref: forwardedRef,
    state,
    props: [elementProps, toast.actionProps, getButtonProps, {
      children: computedChildren
    }]
  });
  if (!shouldRender) {
    return null;
  }
  return element;
});
if (process.env.NODE_ENV !== "production") ToastAction.displayName = "ToastAction";